/backend/user/create (POST) # For creating user accounts
-arguments:
sessionid cookie
username (username of the user to be created)
password (password of the user to be created)
role (role of the user to be created)

-response:
HTTP response 201 if creation is successful
HTTP response 400 otherwise


/backend/user/login (POST) # For logging into a session
-arguments:
username (username to login)
password (password to login)

-response:
sessionid cookie, HTTP response 200 if login is successful
HTTP response 400 otherwise


/backend/user/logout (POST) # For logging out of session
-arguments:
sessionid cookie

-response:
returns HTTP response 200 if successful


/backend/question/assign/get (GET) # For getting question sets for user
-arguments:
sessionid cookie
userid (uuid of user to retrieve questions from)

-response:
returns HTTP response 200 if successful
json with fields:
questions (array of questionids)


/backend/question/create (POST) # For creating an empty question in the system
-arguments:
sessionid cookie

-response:
returns HTTP response 200 if successful


/backend/question/update (POST) # For updating a question in the system
-arguments:
sessionid cookie

questionid(id of question)
qnimg1(base64 encoded jpg image)(optional)(set to DELETE to delete current data)
qnimg2(base64 encoded jpg image)(optional)(set to DELETE to delete current data)
answer(boolean for whether images are similar)(optional)(set to DELETE to delete current data)
difficulty(positive number from 0 to 32767 inclusive)(optional)(set to DELETE to delete current data)

-response:
returns HTTP response 200 if successful