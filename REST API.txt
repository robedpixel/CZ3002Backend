/backend/user/create (POST) # For creating user accounts
-arguments:
sessionid cookie
username (username of the user to be created)
password (password of the user to be created)
role (role of the user to be created)

-response:
HTTP response 201 if creation is successful
HTTP response 400 otherwise


/backend/user/login (POST) # For logging into a session
-arguments:
username (username to login)
password (password to login)

-response:
sessionid cookie, HTTP response 200 if login is successful
HTTP response 400 otherwise


/backend/user/logout (POST) # For logging out of session
-arguments:
sessionid cookie

-response:
returns HTTP response 200 if successful


/backend/question/assign/get (GET) # For getting question sets for user
-arguments:
sessionid cookie
userid (uuid of user to retrieve questions from)

-response:
returns HTTP response 200 if successful
json with fields:
questions (array of questionids)


/backend/question/assign/create (POST) # For creating user assignments for user
-arguments:
sessionid cookie
userid (uuid of user to create questions for)
questions (array of questionids to assign to user)

-response:
returns HTTP response 200 if successful
json with fields:
questions (array of questionids)


/backend/question/get (GET) # For getting question info 
-arguments:
sessionid cookie

questionid (questionid of question to retrieve)

-response:
returns HTTP response 200 if successful
json with fields:
questionid
answer
difficulty
qnimg1
qnimg2


/backend/question/create (POST) # For creating an empty question in the system
-arguments:
sessionid cookie

-response:
returns HTTP response 200 if successful


/backend/question/update (POST) # For updating a question in the system
-arguments:
sessionid cookie

questionid(id of question)
qnimg1(base64 encoded jpg image)(optional)
qnimg2(base64 encoded jpg image)(optional)
answer(boolean for whether images are similar)(optional)
difficulty(positive number from 0 to 32767 inclusive)(optional)

-response:
returns HTTP response 200 if successful


/backend/question/assign/get (GET) # For getting user assignments
-arguments:
sessionid cookie

questionid (questionid of question to retrieve)

-response:
returns HTTP response 200 if successful
json with fields:
questionid
answer
difficulty
qnimg1
qnimg2

/backend/question/result/create (POST) # For creating new result entries
-arguments:
sessionid cookie

userid (userid of result to create)

-response:
returns HTTP response 201 if successful


/backend/question/result/multi/get (POST) # For getting all the results for a user
-arguments:
sessionid cookie

userid (userid of results to retrieve)

-response:
returns HTTP response 200 if successful
json with fields:
results (array of results)

-result format:
resultid
userid
qnsanswered
qnscorrect
attemptdatetime
completiontime